{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/components/navbar/navbar.component.ts","./src/app/shared/components/navbar/navbar.component.html","./src/app/pages/search/cdk-detail-row.directive.ts","./src/app/services/profile.service.ts","./src/environments/environment.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/services/local-storage.service.ts","./src/app/services/upload-savestate.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/search/search.component.ts","./src/app/pages/search/search.component.html","./src/app/app.module.ts","./src/app/pages/savestate-details/savestate-details.component.ts","./src/app/pages/savestate-details/savestate-details.component.html","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.component.html","./src/app/pages/register/username-dialog.html","./src/app/pages/register/email-dialog.html","./src/app/pages/register/confirmation-dialog.html","./src/app/services/account.service.ts","./src/app/services/search.service.ts","./src/app/pages/register/confirmed.validator.ts","./src/app/pages/about/about.component.ts","./src/app/pages/about/about.component.html","./src/app/pages/upload-savestate/upload-savestate.component.ts","./src/app/pages/upload-savestate/upload-savestate.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<br />\r\n<br />\r\n<center>\r\n  <img src=\"../../assets/savestatelogo.png\" alt=\"\" width=\"50%\">\r\n  <br />\r\n  <br />\r\n  <br />\r\n  <br />\r\n  <div class=\"home-text\" style=\"width: 60%\">\r\n      <h2>Welcome to SaveState! This is a site where you can upload, download, and share training lab\r\n      files for <a href=\"https://www.patreon.com/UnclePunch/posts\">UnclePunch's Training Mode</a>.</h2>\r\n      <br />\r\n      <br />\r\n      <h2>Join the <a href=\"https://discord.gg/r2Hsc3s7FP\">Discord</a> to stay up to date on development and announcements.</h2>\r\n      <h3><a routerLink=\"login\">Sign in</a> or <a routerLink=\"register\">Create an account</a></h3>\r\n      <br />\r\n      <br />\r\n      <button mat-stroked-button routerLink=\"search\" color=\"warn\">Get Started</button>\r\n      <br />\r\n      <br />\r\n      <h4>For any issues/questions/comments, please email us at savestategg@gmail.com or contact us via the Discord server!</h4>\r\n      <br />\r\n      <a href=\"https://paypal.me/savestategg?locale.x=en_US\"><button mat-stroked-button color=\"accent\">Support SaveState Development</button></a>\r\n      <br />\r\n      <br />\r\n  </div>\r\n</center>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\n\r\nimport { AppRoutingModule } from '../../../app-routing.module';\r\n\r\nimport { AccountService } from '../../../services/account.service';\r\nimport { LocalStorageService } from '../../../services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  mobileQuery: MediaQueryList;\r\n  logged_in: boolean;\r\n  username: any;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    private account_service: AccountService,\r\n    private local_storage_service: LocalStorageService\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n    this.local_storage_service.getLoggedIn().subscribe( (logged_in) => { this.logged_in = logged_in; });\r\n    this.local_storage_service.getUsername().subscribe( (username) => { this.username = username; });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.account_service.checkToken();\r\n  }\r\n\r\n  logout(): void {\r\n    this.account_service.logout();\r\n    this.logged_in = false;\r\n  }\r\n\r\n}\r\n","<div class=\"navbar-container\">\r\n  <mat-toolbar color=\"primary\" class=\"navbar-toolbar\">\r\n    <button mat-icon-button class=\"example-icon\" (click)=\"snav.toggle()\">\r\n      <mat-icon style=\"padding: 0px;\">menu</mat-icon>\r\n    </button>\r\n  <span>SaveState</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <div class=\"profile-button-container\">\r\n      <button color=\"primary\" mat-mini-fab [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon style=\"padding: 0px;\">person</mat-icon>\r\n      </button>\r\n      <mat-menu #menu=\"matMenu\">\r\n        <div *ngIf=\"logged_in\">\r\n          <button mat-menu-item routerLink=\"/profile/{{ username }}\">Profile</button>\r\n          <button mat-menu-item (click)=\"logout()\">Logout</button>\r\n        </div>\r\n        <div *ngIf=\"!logged_in\">\r\n          <button mat-menu-item routerLink=\"/login\">Login</button>\r\n          <button mat-menu-item routerLink=\"/register\">Register</button>\r\n        </div>\r\n      </mat-menu>\r\n    </div>\r\n  </mat-toolbar>\r\n\r\n  <mat-sidenav-container class=\"example-sidenav-container\"\r\n                         [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\r\n    <mat-sidenav #snav [mode]=\"'over'\"\r\n                 [fixedInViewport]=\"mobileQuery.matches\"\r\n                 fixedTopGap=\"56\"\r\n                 (click)=\"snav.toggle()\">\r\n      <mat-nav-list>\r\n        <a mat-list-item routerLink=\"/\"><mat-icon>home</mat-icon>Home</a>\r\n        <a mat-list-item routerLink=\"/search\"><mat-icon>search</mat-icon>Search</a>\r\n        <a mat-list-item routerLink=\"/about\"><mat-icon>info</mat-icon>Information</a>\r\n        <div *ngIf=\"logged_in\">\r\n          <a mat-list-item routerLink=\"/upload\"><mat-icon>cloud_upload</mat-icon>Upload</a>\r\n        </div>\r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n      <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n</div>\r\n","import {Directive, HostBinding, HostListener, Input, TemplateRef, ViewContainerRef} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[cdkDetailRow]'\r\n})\r\nexport class CdkDetailRowDirective {\r\n  private row: any;\r\n  private tRef: TemplateRef<any>;\r\n  private opened: boolean;\r\n\r\n  @HostBinding('class.expanded')\r\n  get expended(): boolean {\r\n    return this.opened;\r\n  }\r\n\r\n  @Input()\r\n  set cdkDetailRow(value: any) {\r\n    if (value !== this.row) {\r\n      this.row = value;\r\n      // this.render();\r\n    }\r\n  }\r\n\r\n  @Input('cdkDetailRowTpl')\r\n  set template(value: TemplateRef<any>) {\r\n    if (value !== this.tRef) {\r\n      this.tRef = value;\r\n      // this.render();\r\n    }\r\n  }\r\n\r\n  constructor(public vcRef: ViewContainerRef) { }\r\n\r\n  @HostListener('click')\r\n  onClick(): void {\r\n    console.log('clicked')\r\n    this.toggle();\r\n  }\r\n\r\n  toggle(): void {\r\n    if (this.opened) {\r\n      this.vcRef.clear();\r\n    } else {\r\n      this.render();\r\n    }\r\n    this.opened = this.vcRef.length > 0;\r\n  }\r\n\r\n  private render(): void {\r\n    this.vcRef.clear();\r\n    if (this.tRef && this.row) {\r\n      this.vcRef.createEmbeddedView(this.tRef, { $implicit: this.row });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public async getFilesByUser(data) {\r\n    return await this.http.post(`api/SaveState-Get-Files-By-User`, { user: data }).toPromise();\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AccountService } from '../../services/account.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n\r\n  password_div = false;\r\n  email_div = false;\r\n  success = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public account_service: AccountService,\r\n    public local_storage_service: LocalStorageService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  login_form = this.formBuilder.group({\r\n    email: ['', [Validators.email, Validators.required]],\r\n    password: ['', Validators.required]\r\n  });\r\n\r\n  getEmailErrorMessage() {\r\n    if (this.login_form.controls.email.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n\r\n    return this.login_form.controls.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  getPasswordErrorMessage() {\r\n    if (this.login_form.controls.password.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n  }\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  async login() {\r\n    this.password_div = false;\r\n    this.email_div = false;\r\n    let login_successful = await this.account_service.login(this.login_form.controls.email.value, this.login_form.controls.password.value);\r\n    if (!login_successful) { this.password_div = true; }\r\n    else if (login_successful === null) { this.email_div = true; }\r\n    else {\r\n      this.success = true;\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n}\r\n","<br />\r\n<br />\r\n<div class=\"login-card\">\r\n  <mat-card>\r\n    <mat-card-title>\r\n      Login\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n      <div [formGroup]=\"login_form\">\r\n        <mat-form-field>\r\n          <input matNativeControl placeholder=\"Email\" formControlName=\"email\">\r\n          <mat-error *ngIf=\"login_form.controls.email.invalid\">{{ getEmailErrorMessage() }}</mat-error>\r\n        </mat-form-field>\r\n        <br />\r\n        <mat-form-field>\r\n          <input matNativeControl type=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n          <mat-error *ngIf=\"login_form.controls.password.invalid\">{{ getPasswordErrorMessage() }}</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"accent\" (click)=\"login()\">SUBMIT</button>\r\n      <button mat-raised-button color=\"primary\" routerLink=\"/register\">CREATE AN ACCOUNT</button>\r\n    </mat-card-actions>\r\n    <div class=\"email-div\" *ngIf=\"email_div || password_div\">\r\n      <br />\r\n      <center><h4 color=\"red\">Your email and/or password are incorrect. Please try again.</h4></center>\r\n    </div>\r\n    <div class=\"email-div\" *ngIf=\"success\">\r\n      <br />\r\n      <center><h4>Login successful!</h4></center>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  public username$: BehaviorSubject<string>;\n  public logged_in$: BehaviorSubject<boolean>;\n  public token$: BehaviorSubject<string>;\n  public email$: BehaviorSubject<string>;\n\n  constructor(\n      private router: Router,\n      private http: HttpClient\n  ) {\n      this.username$ = new BehaviorSubject(localStorage.getItem('user'));\n      this.email$ = new BehaviorSubject(localStorage.getItem('email'));\n      this.token$ = new BehaviorSubject(localStorage.getItem('token'));\n      if (localStorage.getItem('user') !== 'null' && localStorage.getItem('user') !== null) {\n        this.logged_in$ = new BehaviorSubject(true);\n      } else {\n        this.logged_in$ = new BehaviorSubject(false);\n      }\n  }\n\n  public getUsername(): Observable<string> {\n    return this.username$.asObservable();\n  }\n\n  public setUsername(username: string): void {\n    this.username$.next(username);\n    localStorage.setItem('user', username);\n  }\n\n  public getLoggedIn(): Observable<boolean> {\n    return this.logged_in$.asObservable();\n  }\n\n  public setLoggedIn(logged_in: boolean): void {\n    this.logged_in$.next(logged_in);\n  }\n\n  public getToken(): Observable<string> {\n    return this.token$.asObservable();\n  }\n\n  public setToken(token: string): void {\n    this.token$.next(token);\n    localStorage.setItem('token', token);\n  }\n\n  public getEmail(): Observable<string> {\n    return this.email$.asObservable();\n  }\n\n  public setEmail(email: string): void {\n    this.email$.next(email);\n    localStorage.setItem('email', email);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadSavestateService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  public async upload(data) {\r\n    return await this.http.post(`/api/SaveState-Upload-File`, data).toPromise(); \r\n  }\r\n\r\n  public async uploadMetadata(data) {\r\n    return await this.http.post(`/api/SaveState-Upload-File-Metadata`, data).toPromise(); \r\n  }\r\n\r\n  public async updateKey(data) {\r\n    return await this.http.post(`/api/Update-Key`, data).toPromise();\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'melee-savestate-frontend';\r\n}\r\n","<div class=\"mat-app-background\">\r\n  <app-navbar></app-navbar>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { DataSource } from '@angular/cdk/collections';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProfileService } from '../../services/profile.service';\r\nimport { SearchService } from '../../services/search.service';\r\n\r\nimport * as characters from '../../shared/characters.json';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements AfterViewInit {\r\n\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n\r\n  username: string;\r\n  name = 'Ethan Harmon';\r\n\r\n  data_source = new MatTableDataSource();\r\n  columns: any = [\r\n    'training_name',\r\n    'character',\r\n    'opponent',\r\n    'stage',\r\n    'training_type',\r\n    'downloads',\r\n    'download-button'\r\n  ]\r\n  length: any;\r\n  page_size = 25;\r\n  page_size_options: number[] = [10, 25, 50];\r\n  page_event: PageEvent;\r\n\r\n  temp_data_source = [\r\n    { training_name: 'Fox Stomp Techchase at 50%', character: 'Cf', opponent: 'Fo', stage: 'fd', training_type: 'Techchase', downloads: 178 },\r\n    { training_name: 'Fox Edgeguard', character: 'Cf', opponent: 'Fo', stage: 'bf', training_type: 'Edgeguard', downloads: 349 },\r\n  ];\r\n\r\n  constructor(\r\n    public route: ActivatedRoute,\r\n    public profile_service: ProfileService,\r\n    public search_service: SearchService\r\n  ) { }\r\n\r\n  async ngAfterViewInit() {\r\n    let data: any;\r\n    console.log(data);\r\n    this.route.params.subscribe( (params) => {\r\n      this.username = params['id'];\r\n    });\r\n    data = await this.profile_service.getFilesByUser(this.username);\r\n    this.data_source.data = [...data];\r\n    setTimeout(() => {\r\n      this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n      this.length = this.temp_data_source.length;\r\n      this.data_source.paginator = this.paginator;\r\n      this.data_source.sort = this.sort;\r\n      this.data_source.sort.direction = 'desc';\r\n      this.data_source.sort.active = 'downloads';\r\n    }, 10);\r\n  }\r\n\r\n  async downloadFile(row: any) {\r\n    console.log(row);\r\n    let data: any;\r\n    data = await this.search_service.downloadFile(row.s3_object_location);\r\n    console.log(data);\r\n    const blob = new Blob([data]);\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = row.file_name;\r\n\r\n    a.click();\r\n\r\n    setTimeout( () => {\r\n      URL.revokeObjectURL(url);\r\n    }, 1000);\r\n\r\n  }\r\n\r\n}\r\n","<div class=\".profile-container\">\r\n  <center><h1>Profile</h1></center>\r\n</div>\r\n<br />\r\n<div class=\"profile-container\">\r\n  <mat-card class=\"profile-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>{{ username }}</mat-card-title>\r\n      <!-- <mat-card-subtitle>{{ name }}</mat-card-subtitle> -->\r\n    </mat-card-header>\r\n    <!-- <mat-card-actions> -->\r\n    <!--   <button mat-button>EDIT PROFILE</button> -->\r\n    <!-- </mat-card-actions> -->\r\n  </mat-card>\r\n</div>\r\n  <br />\r\n  <br />\r\n  <center><h3>Uploads</h3></center>\r\n  <br />\r\n  <div class=\"table-container\"><div style=\"display: inline-block; width: 80%\">\r\n  <mat-table\r\n    [dataSource]=\"data_source\"\r\n    matSort\r\n    class=\"mat-elevation-z8\"\r\n    matSortActive=\"downloads\"\r\n    matSortDirection=\"desc\"\r\n    matSortDisableClear=\"true\"\r\n  >\r\n    <ng-container matColumnDef=\"training_name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{ row.title }}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"character\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Character</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"><img class=\"stock-icon\" src='../../assets/{{ row.character }}.png'></mat-cell>\r\n      <!-- <mat-cell *matCellDef=\"let row\">{{ row.character.S }}</mat-cell> -->\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"opponent\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Opponent</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"><img class=\"stock-icon\" src='../../assets/{{ row.opponent }}.png'></mat-cell>\r\n      <!-- <mat-cell *matCellDef=\"let row\">{{ row.opponent.S }}</mat-cell> -->\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stage\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Stage</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"><img class=\"stage-pic\" src='../../assets/{{ row.stage }}.jpg'></mat-cell>\r\n      <!-- <mat-cell *matCellDef=\"let row\">{{ row.stage.S }}</mat-cell> -->\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"training_type\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Type</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{ row.training_type }}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"version\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Version</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{ row.version }}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"downloads\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Downloads</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{ row.downloads }}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"download-button\">\r\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">\r\n        <button mat-stroked-button color=\"accent\" (click)=\"downloadFile(row)\"><mat-icon>download</mat-icon></button>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"columns; stick: false\"></mat-header-row>\r\n    <mat-row\r\n      *matRowDef=\"let row; columns: columns\"\r\n      mat-Ripple\r\n      class=\"savestate-row\"\r\n    ></mat-row>\r\n    <mat-paginator\r\n      [length]=\"length\"\r\n      [pageSize]=\"page_size\"\r\n      [pageSizeOptions]=\"page_size_options\">\r\n    </mat-paginator>\r\n  </mat-table>\r\n</div></div>\r\n","import { DataSource } from '@angular/cdk/collections';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SearchService } from '../../services/search.service';\r\n\r\nimport * as characters from '../../shared/characters.json';\r\n\r\ndeclare var require: any;\r\nconst FileSaver = require('file-saver');\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0', visibility: 'hidden' })),\r\n      state('expanded', style({ height: '*', visibility: 'visible' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ]\r\n})\r\nexport class SearchComponent implements AfterViewInit {\r\n\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n\r\n  isExpansionDetailRow = (index, row) => row.hasOwnProperty('detailRow');\r\n  //expandedRow: any;\r\n\r\n  character_filter = \"\";\r\n  opponent_filter = \"Any\";\r\n  stage_filter = \"Any\";\r\n  training_type = new FormControl({ value: 'Any' });\r\n  training_type_list: string[] = [\r\n    'Any',\r\n    'Punish',\r\n    'Edgeguard',\r\n    'Spacing',\r\n    'Techchase',\r\n    'Recovery',\r\n    'Out of Shield',\r\n    'Attack on Shield',\r\n    'Defense'\r\n  ];\r\n  version = new FormControl({ value: 'Any' });\r\n  version_list: string[] = [\r\n    'Any',\r\n    'Alpha 1',\r\n    'Alpha 2',\r\n    'Alpha 3',\r\n    'Alpha 6',\r\n    'Alpha 7.2'\r\n  ]\r\n\r\n  data_source = new MatTableDataSource();\r\n  columns: any = [\r\n    'username',\r\n    'file_name',\r\n    'character',\r\n    'opponent',\r\n    'stage',\r\n    'training_type',\r\n    'version',\r\n    'downloads',\r\n    'download-button'\r\n  ]\r\n  length: any;\r\n  page_size = 25;\r\n  page_size_options: number[] = [10, 25, 50];\r\n  page_event: PageEvent;\r\n  data: any;\r\n  default_search: boolean;\r\n  expandedRow: any;\r\n\r\n  temp_data_source = [\r\n    { username: 'thetincan', training_name: 'Fox Stomp Techchase at 50%', character: 'Cf', opponent: 'Fo', stage: 'fd', training_type: 'Techchase', version: 'Alpha 6', downloads: 178 },\r\n    { username: 'thetincan', training_name: 'Fox Edgeguard', character: 'Cf', opponent: 'Fo', stage: 'bf', training_type: 'Edgeguard', version: 'Alpha 3', downloads: 349 },\r\n  ];\r\n\r\n  constructor(public search_service: SearchService) {\r\n    this.default_search = true;\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.data = await this.search_service.getFilesByPopularity();\r\n    this.data_source.data = [...this.data];\r\n    setTimeout(() => {\r\n      this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n      this.length = this.temp_data_source.length;\r\n      this.data_source.paginator = this.paginator;\r\n      this.data_source.sort = this.sort;\r\n      this.data_source.sort.direction = 'desc';\r\n      this.data_source.sort.active = 'downloads';\r\n    }, 10);\r\n  }\r\n\r\n  applyFilter(filter_value: string) {\r\n    this.data_source.filter = filter_value.trim().toLowerCase();\r\n\r\n    if(this.data_source.paginator) {\r\n      this.data_source.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  async search () {\r\n    let filter_attributes = {};\r\n    let filter_attribute_names = {};\r\n    let filter_expression = '';\r\n    let key_expression = '';\r\n\r\n    // This is here so that the code knows if it needs to add \"and\" into the filter expression.\r\n    let multiple_filters = false;\r\n\r\n    if (this.character_filter != '') {\r\n      filter_attributes[':char'] = { 'S': this.character_filter };\r\n      filter_attribute_names['#c'] = 'character';\r\n      key_expression += '#c = :char';\r\n\r\n      if (this.opponent_filter != 'Any') {\r\n        filter_attributes[':opp'] = { 'S': this.opponent_filter };\r\n        filter_attribute_names['#o'] = 'opponent';\r\n        filter_expression += '#o = :opp';\r\n        multiple_filters = true;\r\n      }\r\n\r\n      if (this.stage_filter != 'Any') {\r\n        filter_attributes[':stage'] = { 'S': this.stage_filter };\r\n        filter_attribute_names['#s'] = 'stage';\r\n        if (multiple_filters) {\r\n          filter_expression += ' and #s = :stage';\r\n        } else {\r\n          filter_expression = '#s = :stage';\r\n          multiple_filters = true;\r\n        }\r\n      }\r\n\r\n      if (this.version.value != 'Any' && !this.version.value.value) {\r\n        filter_attributes[':ver'] = { 'S': this.version.value };\r\n        filter_attribute_names['#v'] = 'version';\r\n        if (multiple_filters) {\r\n          filter_expression += ' and #v = :ver';\r\n        } else {\r\n          filter_expression = '#v = :ver';\r\n          multiple_filters = true;\r\n        }\r\n      }\r\n\r\n      if (this.training_type.value != 'Any' && !this.training_type.value.value) {\r\n        filter_attributes[':tt'] = { 'S': this.training_type.value };\r\n        filter_attribute_names['#t'] = 'training_type';\r\n        if (multiple_filters) {\r\n          filter_expression += ' and #t = :tt';\r\n        } else {\r\n          filter_expression += '#t = :tt';\r\n        }\r\n      }\r\n\r\n      this.data = await this.search_service.getFilesByCharacter([key_expression, filter_attributes, filter_attribute_names, filter_expression]);\r\n\r\n      this.data_source.data = [...this.data];\r\n      setTimeout(() => {\r\n        this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n        this.length = this.temp_data_source.length;\r\n        this.data_source.paginator = this.paginator;\r\n        this.data_source.sort = this.sort;\r\n        this.data_source.sort.direction = 'desc';\r\n        this.data_source.sort.active = 'downloads';\r\n      }, 10);\r\n\r\n      console.log(this.data_source.data);\r\n\r\n    }\r\n  }\r\n\r\n  async downloadFile(row: any) {\r\n    console.log(row);\r\n    let file: any;\r\n    file = await this.search_service.downloadFile(row.s3_object_location.S || row.s3_object_location);\r\n    console.log(file);\r\n    const blob = new Blob([file]);\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = row.file_name.S || row.file_name;\r\n\r\n    a.click();\r\n\r\n    setTimeout( () => {\r\n      URL.revokeObjectURL(url);\r\n    }, 1000);\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"search-container\">\r\n  <div class=\"search-filters\">\r\n    <br />\r\n    <mat-form-field class=\"dropdown\">\r\n      <mat-label>Character</mat-label>\r\n      <mat-select [(value)]=\"character_filter\">\r\n        <mat-option value=\"Fox\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Fox.png\" />Fox\r\n        </mat-option>\r\n        <mat-option value=\"Falco\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Falco.png\" />Falco\r\n        </mat-option>\r\n        <mat-option value=\"Marth\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Marth.png\" />Marth\r\n        </mat-option>\r\n        <mat-option value=\"Jigglypuff\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Jigglypuff.png\" />Jigglypuff\r\n        </mat-option>\r\n        <mat-option value=\"Sheik\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Sheik.png\" />Sheik\r\n        </mat-option>\r\n        <mat-option value=\"Captain Falcon\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Captain Falcon.png\" />Captain Falcon\r\n        </mat-option>\r\n        <mat-option value=\"Peach\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Peach.png\" />Peach\r\n        </mat-option>\r\n        <mat-option value=\"Ice Climbers\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Ice Climbers.png\" />Ice Climbers\r\n        </mat-option>\r\n        <mat-option value=\"Pikachu\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Pikachu.png\" />Pikachu\r\n        </mat-option>\r\n        <mat-option value=\"Samus\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Samus.png\" />Samus\r\n        </mat-option>\r\n        <mat-option value=\"Dr. Mario\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Doctor Mario.png\" />Doctor Mario\r\n        </mat-option>\r\n        <mat-option value=\"Yoshi\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Yoshi.png\" />Yoshi\r\n        </mat-option>\r\n        <mat-option value=\"Luigi\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Luigi.png\" />Luigi\r\n        </mat-option>\r\n        <mat-option value=\"Ganondorf\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Ganondorf.png\" />Ganondorf\r\n        </mat-option>\r\n        <mat-option value=\"Mario\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Mario.png\" />Mario\r\n        </mat-option>\r\n        <mat-option value=\"Young Link\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Young Link.png\" />Young Link\r\n        </mat-option>\r\n        <mat-option value=\"Donkey Kong\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Donkey Kong.png\" />Donkey Kong\r\n        </mat-option>\r\n        <mat-option value=\"Link\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Link.png\" />Link\r\n        </mat-option>\r\n        <mat-option value=\"Game & Watch\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Game & Watch.png\" />Game & Watch\r\n        </mat-option>\r\n        <mat-option value=\"Roy\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Roy.png\" />Roy\r\n        </mat-option>\r\n        <mat-option value=\"Mewtwo\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Mewtwo.png\" />Mewtwo\r\n        </mat-option>\r\n        <mat-option value=\"Ness\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Ness.png\" />Ness\r\n        </mat-option>\r\n        <mat-option value=\"Pichu\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Pichu.png\" />Pichu\r\n        </mat-option>\r\n        <mat-option value=\"Zelda\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Zelda.png\" />Zelda\r\n        </mat-option>\r\n        <mat-option value=\"Kirby\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Kirby.png\" />Kirby\r\n        </mat-option>\r\n        <mat-option value=\"Bowser\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Bowser.png\" />Bowser\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"dropdown\">\r\n      <mat-label>Opponent</mat-label>\r\n      <mat-select [(value)]=\"opponent_filter\">\r\n        <mat-option value=\"Any\">Any</mat-option>\r\n        <mat-option value=\"Fox\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Fox.png\" />Fox\r\n        </mat-option>\r\n        <mat-option value=\"Falco\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Falco.png\" />Falco\r\n        </mat-option>\r\n        <mat-option value=\"Marth\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Marth.png\" />Marth\r\n        </mat-option>\r\n        <mat-option value=\"Jigglypuff\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Jigglypuff.png\" />Jigglypuff\r\n        </mat-option>\r\n        <mat-option value=\"Sheik\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Sheik.png\" />Sheik\r\n        </mat-option>\r\n        <mat-option value=\"Captain Falcon\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Captain Falcon.png\" />Captain Falcon\r\n        </mat-option>\r\n        <mat-option value=\"Peach\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Peach.png\" />Peach\r\n        </mat-option>\r\n        <mat-option value=\"Ice Climbers\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Ice Climbers.png\" />Ice Climbers\r\n        </mat-option>\r\n        <mat-option value=\"Pikachu\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Pikachu.png\" />Pikachu\r\n        </mat-option>\r\n        <mat-option value=\"Samus\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Samus.png\" />Samus\r\n        </mat-option>\r\n        <mat-option value=\"Dr. Mario\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Doctor Mario.png\" />Doctor Mario\r\n        </mat-option>\r\n        <mat-option value=\"Yoshi\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Yoshi.png\" />Yoshi\r\n        </mat-option>\r\n        <mat-option value=\"Luigi\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Luigi.png\" />Luigi\r\n        </mat-option>\r\n        <mat-option value=\"Ganondorf\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Ganondorf.png\" />Ganondorf\r\n        </mat-option>\r\n        <mat-option value=\"Mario\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Mario.png\" />Mario\r\n        </mat-option>\r\n        <mat-option value=\"Young Link\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Young Link.png\" />Young Link\r\n        </mat-option>\r\n        <mat-option value=\"Donkey Kong\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Donkey Kong.png\" />Donkey Kong\r\n        </mat-option>\r\n        <mat-option value=\"Link\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Link.png\" />Link\r\n        </mat-option>\r\n        <mat-option value=\"Game & Watch\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Game & Watch.png\" />Game & Watch\r\n        </mat-option>\r\n        <mat-option value=\"Roy\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Roy.png\" />Roy\r\n        </mat-option>\r\n        <mat-option value=\"Mewtwo\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Mewtwo.png\" />Mewtwo\r\n        </mat-option>\r\n        <mat-option value=\"Ness\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Ness.png\" />Ness\r\n        </mat-option>\r\n        <mat-option value=\"Pichu\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Pichu.png\" />Pichu\r\n        </mat-option>\r\n        <mat-option value=\"Zelda\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Zelda.png\" />Zelda\r\n        </mat-option>\r\n        <mat-option value=\"Kirby\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Kirby.png\" />Kirby\r\n        </mat-option>\r\n        <mat-option value=\"Bowser\">\r\n          <img class=\"stock-icon\" src=\"../../assets/Bowser.png\" />Bowser\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"dropdown\">\r\n      <mat-label>Stage</mat-label>\r\n      <mat-select [(value)]=\"stage_filter\">\r\n        <mat-option value=\"Any\">Any</mat-option>\r\n        <mat-option value=\"Battlefield\">Battlefield</mat-option>\r\n        <mat-option value=\"Dreamland\">Dreamland</mat-option>\r\n        <mat-option value=\"Final Destination\">Final Destination</mat-option>\r\n        <mat-option value=\"Fountain of Dreams\">Fountain of Dreams</mat-option>\r\n        <mat-option value=\"Pokemon Stadium\">Pokemon Stadium</mat-option>\r\n        <mat-option value=\"Yoshi's Story\">Yoshi's Story</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"dropdown\">\r\n      <mat-label>Training Type</mat-label>\r\n      <mat-select [formControl]=\"training_type\">\r\n        <mat-option *ngFor=\"let type of training_type_list\" [value]=\"type\">{{ type }}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"last-dropdown\">\r\n      <mat-label>Training Mode Version</mat-label>\r\n      <mat-select [formControl]=\"version\">\r\n        <mat-option *ngFor=\"let version of version_list\" [value]=\"version\">{{ version }}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <button mat-stroked-button color=\"accent\" (click)=\"search()\">\r\n      <mat-icon color=\"white\">search</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n<div class=\"table-container\">\r\n  <div style=\"display: inline-block; width: 80%\">\r\n    <!-- <div style=\"text-align: left\">\r\n      <mat-form-field>\r\n        <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\" />\r\n      </mat-form-field>\r\n    </div> -->\r\n    <mat-table #table\r\n      [dataSource]=\"data_source\"\r\n      matSort\r\n      class=\"mat-elevation-z8\"\r\n      matSortActive=\"downloads\"\r\n      matSortDirection=\"desc\"\r\n      matSortDisableClear=\"true\"\r\n    >\r\n      <ng-container matColumnDef=\"username\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>User</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"><a routerLink=\"/profile/{{ row.username.S || row.username }}\">{{ row.username.S || row.username }}</a></mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"file_name\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\">{{ row.title.S || row.title }}</mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"character\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Character</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"><img class=\"stock-icon-table\" src='../../assets/{{ row.character.S || row.character }}.png'></mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"opponent\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Opponent</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"><img class=\"stock-icon-table\" src='../../assets/{{ row.opponent.S || row.opponent }}.png'></mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"stage\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Stage</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"><img class=\"stage-pic\" src='../../assets/{{ row.stage.S || row.stage }}.jpg'></mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"training_type\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Type</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\">{{ row.training_type.S || row.training_type }}</mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"version\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Version</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\">{{ row.version.S || row.version }}</mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"downloads\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Downloads</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\">{{ row.downloads.N || row.downloads }}</mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"download-button\">\r\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\">\r\n          <button mat-stroked-button color=\"accent\" (click)=\"downloadFile(row)\"><mat-icon>download</mat-icon></button>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      // TODO: Figure out why the row expansion stuff isn't working.\r\n\r\n      <!-- <ng-container matColumnDef=\"expandedDetail\">\r\n        <mat-cell *matCellDef=\"let row\" [attr.colspan]=\"columns.length\">\r\n          <div class=\"mat-row detail-row\" [@detailExpand]=\"row == expandedRow ? 'expanded' : 'collapsed'\">\r\n            {{ row.description }}\r\n          </div>\r\n        </mat-cell>\r\n      </ng-container> -->\r\n\r\n      <mat-header-row *matHeaderRowDef=\"columns; stick: false\"></mat-header-row>\r\n      <!-- <mat-row\r\n        *matRowDef=\"let row; columns: columns\"\r\n        mat-Ripple\r\n        class=\"savestate-row\"\r\n        [class.expanded-savestate-row]=\"expandedRow == row\"\r\n        (click)=\"expandedRow = row\"\r\n      ></mat-row>\r\n      <mat-row\r\n        *matRowDef=\"let row; columns: ['expandedDetail']; when: isExpansionDetailRow\"\r\n        [@detailExpand]=\"row.element == expandedRow ? 'expanded' : 'collapsed'\"\r\n        style=\"overflow: hidden\"\r\n        class=\"detail-row\"\r\n      ></mat-row> -->\r\n      <mat-row *matRowDef=\"let row; columns: columns;\" matRipple class=\"savestate-row\" [cdkDetailRow]=\"row\" [cdkDetailRowTpl]=\"tpl\"></mat-row>\r\n      <mat-paginator\r\n        [length]=\"length\"\r\n        [pageSize]=\"page_size\"\r\n        [pageSizeOptions]=\"page_size_options\">\r\n      </mat-paginator>\r\n    </mat-table>\r\n  </div>\r\n\r\n  <ng-template #tpl let-row>\r\n    <div class=\"mat-row detail-row\" [@detailExpand] style=\"overflow: hidden\" [innerText]=\"row.description.S || row.description\">\r\n    </div>\r\n  </ng-template>\r\n\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { SearchComponent } from './pages/search/search.component';\r\nimport { UploadSavestateComponent } from './pages/upload-savestate/upload-savestate.component';\r\nimport { SavestateDetailsComponent } from './pages/savestate-details/savestate-details.component';\r\nimport { NavbarComponent } from './shared/components/navbar/navbar.component';\r\nimport { AboutComponent } from './pages/about/about.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { RegisterComponent } from './pages/register/register.component';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\n\r\nimport { CdkDetailRowDirective } from './pages/search/cdk-detail-row.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CdkDetailRowDirective,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    SearchComponent,\r\n    UploadSavestateComponent,\r\n    SavestateDetailsComponent,\r\n    NavbarComponent,\r\n    AboutComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    ReactiveFormsModule,\r\n    FileUploadModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  schemas: [\r\n    NO_ERRORS_SCHEMA\r\n  ],\r\nbootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-savestate-details',\r\n  templateUrl: './savestate-details.component.html',\r\n  styleUrls: ['./savestate-details.component.scss']\r\n})\r\nexport class SavestateDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>savestate-details works!</p>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\nimport { ConfirmedValidator } from './confirmed.validator';\r\n\r\nimport { AccountService } from '../../services/account.service';\r\n\r\nimport { User } from '../../models/user';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent {\r\n\r\n  user: User;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public dialog: MatDialog,\r\n    public account_service: AccountService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  registration_form = this.formBuilder.group({\r\n    name: ['', Validators.required],\r\n    username: ['', Validators.required],\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', [Validators.required, Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[A-Za-z\\d$@$!%*?&].{7,}')]],\r\n    confirm_password: ['', Validators.required],\r\n  }, { validator: ConfirmedValidator ('password', 'confirm_password') }\r\n  )\r\n\r\n  getNameErrorMessage() {\r\n    if (this.registration_form.controls.name.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n  }\r\n\r\n  getUsernameErrorMessage() {\r\n    if (this.registration_form.controls.username.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n  }\r\n\r\n  getEmailErrorMessage() {\r\n    if (this.registration_form.controls.email.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n\r\n    return this.registration_form.controls.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  getPasswordErrorMessage() {\r\n    if (this.registration_form.controls.password.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n    \r\n  }\r\n\r\n  getPasswordPatternErrorMessage() {\r\n    return this.registration_form.controls.password.hasError('pattern') ? 'Password must be at least 8 characters long, contain one uppercase and lowercase letter, and one number.' : '';\r\n  }\r\n\r\n  getConfirmationPasswordErrorMessage() {\r\n    if (this.registration_form.controls.confirm_password.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n    return this.registration_form.controls.confirm_password != this.registration_form.controls.password ?'The passwords do not match' : '';\r\n  }\r\n\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n  passwordFormControl = new FormControl('', [\r\n    Validators.required,\r\n]);\r\n\r\n  async register() {\r\n    let username_taken = await this.account_service.usernameTaken(this.registration_form.controls.username.value);\r\n    let email_taken = await this.account_service.emailTaken(this.registration_form.controls.email.value);\r\n\r\n    if (username_taken.toString() === 'true') { this.openUsernameDialog() }\r\n    else if (email_taken.toString() === 'true') { this.openEmailDialog() }\r\n    else {\r\n      this.user = {\r\n        name: this.registration_form.controls.name.value,\r\n        username: this.registration_form.controls.username.value,\r\n        email: this.registration_form.controls.email.value,\r\n        password: this.registration_form.controls.password.value,\r\n      }\r\n      this.account_service.register(this.user);\r\n      this.openConfirmationDialog();\r\n    }\r\n\r\n  }\r\n\r\n  openUsernameDialog() {\r\n    const dialogRef = this.dialog.open(UsernameDialog, {\r\n      width: '500px',\r\n      data: { username: this.registration_form.controls.username.value }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.registration_form.controls.username.setValue('');\r\n    });\r\n  }\r\n\r\n  openEmailDialog() {\r\n    const dialogRef = this.dialog.open(EmailDialog, {\r\n      width: '500px',\r\n      data: { email: this.registration_form.controls.email.value }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.registration_form.controls.email.setValue('');\r\n    });\r\n  }\r\n\r\n  openConfirmationDialog() {\r\n    const dialogRef = this.dialog.open(ConfirmationDialog, {\r\n      width: '500px',\r\n    });\r\n  }\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'username-dialog',\r\n  templateUrl: 'username-dialog.html',\r\n})\r\nexport class UsernameDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UsernameDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data) {}\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'email-dialog',\r\n  templateUrl: 'email-dialog.html',\r\n})\r\nexport class EmailDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UsernameDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data) {}\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'confirmation-dialog',\r\n  templateUrl: 'confirmation-dialog.html',\r\n})\r\nexport class ConfirmationDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmationDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public router: Router) {}\r\n\r\n  closeConfirmation(): void {\r\n    this.router.navigate(['/']);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<br />\r\n<br />\r\n<div class=\"registration-card\">\r\n  <mat-card>\r\n    <mat-card-title>\r\n      Register\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n      <div [formGroup]=\"registration_form\">\r\n        <mat-form-field>\r\n          <input matNativeControl placeholder=\"Full Name\" formControlName=\"name\">\r\n          <mat-error *ngIf=\"registration_form.controls.name.invalid\">{{ getNameErrorMessage() }}</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <input matNativeControl placeholder=\"Username\" formControlName=\"username\">\r\n          <mat-error *ngIf=\"registration_form.controls.username.invalid\">{{ getUsernameErrorMessage() }}</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"Email\" formControlName=\"email\">\r\n          <mat-error *ngIf=\"registration_form.controls.email.invalid\">{{ getEmailErrorMessage() }}</mat-error>\r\n        </mat-form-field>\r\n        <br />\r\n        <mat-form-field>\r\n          <input matNativeControl type=\"password\" placeholder=\"Password\" formControlName=\"password\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"registration_form.controls.password.invalid\">{{ getPasswordErrorMessage() }}</mat-error>\r\n          <mat-error *ngIf=\"registration_form.get('password').hasError('pattern')\">{{ getPasswordPatternErrorMessage() }}</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <input matNativeControl type=\"password\" placeholder=\"Confirm Password\" formControlName=\"confirm_password\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"registration_form.controls.confirm_password.invalid\">{{ getConfirmationPasswordErrorMessage() }}</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"accent\" (click)=\"register()\">CREATE ACCOUNT</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","<!-- <h1 mat-dialog-title>Hi {{data.name}}</h1> -->\r\n<div mat-dialog-content>\r\n  <p>The username <strong>{{ data.username }}</strong> is taken. Please choose another one.</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-raised-button color=\"warn\"(click)=\"close()\">Ok</button>\r\n</div>\r\n","<!-- <h1 mat-dialog-title>Hi {{data.name}}</h1> -->\r\n<div mat-dialog-content>\r\n  <p>An account with the email <strong>{{ data.email }}</strong> already exists.</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-raised-button color=\"warn\"(click)=\"close()\">Ok</button>\r\n</div>\r\n","<h1 mat-dialog-title>Registration Successful!</h1>\r\n<div mat-dialog-content>\r\n  <!-- <p>Please check your email for a message from us. Welcome to SaveState!</p> -->\r\n  <p>Your registration was successful, welcome to SaveState!</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-raised-button color=\"warn\"(click)=\"closeConfirmation()\">Ok</button>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n// import { BehaviorSubject, Observable } from 'rxjs';\r\n// import { map } from 'rxjs/operators';\r\n\r\nimport { LocalStorageService } from '../services/local-storage.service';\r\n\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountService {\r\n  public user: string;\r\n  public token: string;\r\n  public email: string;\r\n  public logged_in: boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private local_storage_service: LocalStorageService\r\n  ) {\r\n    this.local_storage_service.getToken().subscribe( (token) => { this.token = token });\r\n    this.local_storage_service.getEmail().subscribe( (email) => { this.email = email });\r\n  }\r\n\r\n  async checkToken() {\r\n    let user: any;\r\n    if(this.token != 'null' && this.token != null) {\r\n      user = await this.http.post(`/api/SaveState-Check-Token`, { \"token\": this.token, \"email\": this.email }, { responseType: 'text' }).toPromise();\r\n      this.local_storage_service.setUsername(user);\r\n      return user;\r\n    } else {\r\n      localStorage.setItem('user', 'null');\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async login(email: string, password: string) {\r\n    let login_successful: any;\r\n    let user: any;\r\n    let body = {\r\n      \"email\": email,\r\n      \"password\": password\r\n    }\r\n    await this.http.post(`/api/login`, body).toPromise().then( (res) => { login_successful = res; });\r\n\r\n    if (login_successful) {\r\n      await this.http.post(`/api/SaveState-Get-User`, body).toPromise().then( (res) => { user = res; });\r\n      this.local_storage_service.setUsername(user.username.S);\r\n      this.local_storage_service.setToken(user.token.S);\r\n      this.local_storage_service.setEmail(user.email.S);\r\n      this.local_storage_service.setLoggedIn(true);\r\n      return login_successful;\r\n    } else {\r\n      return login_successful;\r\n    }\r\n  }\r\n\r\n  logout() {\r\n      this.local_storage_service.setUsername('null');\r\n      this.local_storage_service.setToken('null');\r\n      this.local_storage_service.setEmail('null');\r\n      this.local_storage_service.setLoggedIn(false);\r\n      this.router.navigate(['/login']);\r\n  }\r\n\r\n  async register(user: User) {\r\n      console.log(user);\r\n      return await this.http.post(`/api/register`, user).toPromise();\r\n  }\r\n\r\n  async usernameTaken(username: string) {\r\n      let body = { \"username\": username }\r\n      return await this.http.post(`/api/username-exists`, body).toPromise();\r\n  }\r\n\r\n  async emailTaken(email: string) {\r\n      let body = { \"email\": email }\r\n      return await this.http.post(`/api/SaveState-Email-Exists`, body).toPromise();\r\n  }\r\n\r\n  // getAll() {\r\n  //     return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n  // }\r\n  //\r\n  // getById(id: string) {\r\n  //     return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\r\n  // }\r\n  //\r\n  // update(id, params) {\r\n  //   return this.http.put(`${environment.apiUrl}/users/${id}`, params)\r\n  //               .pipe(map(x => {\r\n  //                   // update stored user if the logged in user updated their own record\r\n  //                   if (id == this.userValue.id) {\r\n  //                       // update local storage\r\n  //                       const user = { ...this.userValue, ...params };\r\n  //                       localStorage.setItem('user', JSON.stringify(user));\r\n  //\r\n  //                       // publish updated user to subscribers\r\n  //                       this.userSubject.next(user);\r\n  //                   }\r\n  //                   return x;\r\n  //               }));\r\n  // }\r\n  //\r\n  // delete(id: string) {\r\n  //     return this.http.delete(`${environment.apiUrl}/users/${id}`)\r\n  //         .pipe(map(x => {\r\n  //             // auto logout if the logged in user deleted their own record\r\n  //             if (id == this.userValue.id) {\r\n  //                 this.logout();\r\n  //             }\r\n  //             return x;\r\n  //         }));\r\n  // }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  public async getFilesByCharacter(data) {\r\n    return await this.http.post(`api/SaveState-Get-Files-By-Character`, data).toPromise();\r\n  }\r\n\r\n  public async getFilesByPopularity() {\r\n    return await this.http.post(`api/SaveState-Get-Files-By-Popularity`, {}).toPromise();\r\n  }\r\n\r\n  public async downloadFile(data) {\r\n    let params = new HttpParams().set('url', data);\r\n    return await this.http.get(`api/SaveState-Download-File`, { responseType: 'blob', params: params }).toPromise();\r\n  }\r\n\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <center> -->\r\n  <div class=\"faq-text\" style=\"width: 60%; padding-left: 20%\">\r\n    <h1>What is SaveState?</h1>\r\n    <p>SaveState is an application that houses training files created in\r\n       UnclePunch's Training Mode. These files can be uploaded by anyone\r\n       who creates an account. No more having to share files in Discord servers!</p>\r\n    <br />\r\n    <br />\r\n    <h1>How do I download a training file?</h1>\r\n    <p>Navigate to our search page, and choose some filters. The only required\r\n       filter is \"Character\", all others are optional to help you narrow down\r\n       your search.</p>\r\n    <br />\r\n    <br />\r\n    <h1>I've downloaded a training file, now what?</h1>\r\n    <p>First, open up Dolphin, go to Config, then click the GameCube tab. Make sure\r\n       under \"Device Settings\" that \"Slot A\" has \"GCI Folder\" selected. Next,\r\n       open your file explorer on your local computer, and navigate to the folder\r\n       where your Dolphin files are stored. Once there, follow the directory path:\r\n       \"User/GC/USA/Card A/\". Place the .gci file that you downloaded from SaveState\r\n       into that folder. Boot up Training Mode, go to Training Lab, click on \"Import\",\r\n       and the file should show up in the list of trainings.</p>\r\n    <br />\r\n    <br />\r\n    <h1>How do I upload a training file?</h1>\r\n    <p>Go to the \"Upload\" page. There, you will be prompted to select a .gci file to\r\n       upload. Navigate to the same folder as detailed in the section above, and choose\r\n       the training file you want to upload. Next, fill out all the relevant information,\r\n       and please make sure it is all accurate. Click \"Upload\", and you should see a dialog\r\n       confirming that the upload was successful!</p>\r\n    <br />\r\n    <br />\r\n    <h2>Thank You's</h2>\r\n    <p>Thank you to NCMimsy and Luda for their contributions to this project with writing\r\n       Lambda functions for the backend functionality! Thank you to UnclePunch for all the\r\n       hard work he has done for the Melee community over the past few years. Thank you to\r\n       Fizzi for giving the Melee community a way to thrive in the midst of a global pandemic.\r\n       Lastly, thank YOU, the person reading this! I am so excited to have built something\r\n       that people want to use, and I hope SaveState adds a lot of value to the Melee\r\n       community.</p>\r\n    <p> ~ thetincan</p>\r\n    <h3>Support</h3>\r\n    <p><a href=\"https://www.patreon.com/UnclePunch/posts\">UnclePunch</a></p>\r\n    <p><a href=\"https://www.patreon.com/fizzi36/posts\">Fizzi (Slippi)</a></p>\r\n    <p><a href=\"https://paypal.me/savestategg?locale.x=en_US\">SaveState</a> (donations will go to keeping the site running! I'm happy to pay for it all myself, but anything helps :) )</p>\r\n\r\n  </div>\r\n<!-- </center> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormControl } from '@angular/forms';\r\nimport { UploadSavestateService } from '../../services/upload-savestate.service';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\nimport * as characters from '../../shared/characters.json';\r\n\r\n@Component({\r\n  selector: 'app-upload-savestate',\r\n  templateUrl: './upload-savestate.component.html',\r\n  styleUrls: ['./upload-savestate.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state(\r\n        'void',\r\n        style({ height: '0px', minHeight: '0', visibility: 'hidden' })\r\n      ),\r\n      state('*', style({ height: '*', visibility: 'visibile' })),\r\n      transition('void <=> *', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\r\n    ])\r\n  ]\r\n})\r\nexport class UploadSavestateComponent implements OnInit {\r\n\r\n  not_logged_in = false;\r\n  description = '';\r\n  file: any;\r\n  file_name = '';\r\n  character = '';\r\n  opponent = '';\r\n  stage = '';\r\n  title = '';\r\n  training_type = new FormControl();\r\n  training_type_list: string[] = [\r\n    'Punish',\r\n    'Edgeguard',\r\n    'Spacing',\r\n    'Techchase',\r\n    'Recovery',\r\n    'Out of Shield',\r\n    'Attack on Shield',\r\n    'Defense'\r\n  ]\r\n  version = new FormControl();\r\n  version_list: string[] = [\r\n    'Alpha 1',\r\n    'Alpha 2',\r\n    'Alpha 3',\r\n    'Alpha 6',\r\n    'Alpha 7.2'\r\n  ]\r\n\r\n  upload_successful = false;\r\n  upload_unsuccessful = false;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    public upload_savestate_service: UploadSavestateService,\r\n    public account_service: AccountService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  fileUploaded(event) {\r\n    const file_uploaded: File = event.target.files[0];\r\n\r\n    if (file_uploaded.name.toString().substr(-4,4) !== '.gci') {\r\n      this.file_name = 'Please upload a .gci file.';\r\n    } else if (file_uploaded) { \r\n      this.file_name = file_uploaded.name;\r\n      // this.file = new Blob([file_uploaded]);\r\n      this.file = file_uploaded;\r\n      console.log(this.file);\r\n      // this.changeFile(file_uploaded).then( (base64: string): any => {\r\n      //   console.log(base64);\r\n      //   this.file = base64;\r\n      //   console.log(this.file);\r\n      // });\r\n    }\r\n\r\n  }\r\n\r\n  changeFile(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsBinaryString(this.file);\r\n      // reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  async upload() {\r\n    let user = await this.account_service.checkToken();\r\n    if (user == null) {\r\n      this.not_logged_in = true;\r\n    } else {\r\n      let form_data = new FormData();\r\n      let now = new Date();\r\n      let s3_location = now.getMonth() + 1 + '/' + now.getFullYear().toString() + '/' + user + now.getHours().toString() + now.getMinutes().toString() + now.getSeconds().toString();\r\n      let data = {\r\n        username: user,\r\n        description: this.description,\r\n        file_name: this.file_name,\r\n        character: this.character,\r\n        opponent: this.opponent,\r\n        stage: this.stage,\r\n        title: this.title,\r\n        training_type: this.training_type.value,\r\n        version: this.version.value,\r\n        s3_location: s3_location,\r\n        downloads: 0\r\n      }\r\n      form_data.append('file', this.file);\r\n      form_data.append('file_name', s3_location);\r\n      console.log(s3_location);\r\n\r\n      let key_updated = await this.upload_savestate_service.updateKey(data);\r\n\r\n      let success = await this.upload_savestate_service.upload(form_data);\r\n\r\n      console.log(success);\r\n\r\n      if (success) { \r\n        this.upload_successful = true; \r\n        await this.upload_savestate_service.uploadMetadata(data);\r\n      } else { this.upload_unsuccessful = true; }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<br />\r\n<br />\r\n<div class=\"upload-container\">\r\n  <mat-card>\r\n    <mat-card-title>\r\n      <h2>Upload</h2>\r\n    </mat-card-title>\r\n    <mat-card-subtitle>\r\n      Upload your Uncle Punch .gci file and add the relevant information.\r\n    </mat-card-subtitle>\r\n    <mat-card-content>\r\n      <input type=\"file\" class=\"file-upload\" (change)=\"fileUploaded($event)\" #fileUpload>\r\n      <div class=\"select-file\">\r\n        {{ file_name || \"No file uploaded yet.\" }}\r\n        <button mat-mini-fab color=\"accent\" class=\"upload-button\" (click)=\"fileUpload.click()\">\r\n          <mat-icon>attach_file</mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"upload-options\">\r\n        <br />\r\n        <mat-form-field class=\"dropdown\">\r\n          <mat-label>Title</mat-label>\r\n          <input matInput placeholder=\"Ex: Stomp on Fox at 50%\" [(ngModel)]=\"title\">\r\n        </mat-form-field>\r\n        <mat-form-field class=\"dropdown\">\r\n          <mat-label>Character</mat-label>\r\n          <mat-select [(value)]=\"character\">\r\n            <mat-option value=\"Fox\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Fox.png\" />Fox\r\n            </mat-option>\r\n            <mat-option value=\"Falco\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Falco.png\" />Falco\r\n            </mat-option>\r\n            <mat-option value=\"Marth\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Marth.png\" />Marth\r\n            </mat-option>\r\n            <mat-option value=\"Jigglypuff\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Jigglypuff.png\" />Jigglypuff\r\n            </mat-option>\r\n            <mat-option value=\"Sheik\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Sheik.png\" />Sheik\r\n            </mat-option>\r\n            <mat-option value=\"Captain Falcon\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Captain Falcon.png\" />Captain Falcon\r\n            </mat-option>\r\n            <mat-option value=\"Peach\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Peach.png\" />Peach\r\n            </mat-option>\r\n            <mat-option value=\"Ice Climbers\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Ice Climbers.png\" />Ice Climbers\r\n            </mat-option>\r\n            <mat-option value=\"Pikachu\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Pikachu.png\" />Pikachu\r\n            </mat-option>\r\n            <mat-option value=\"Samus\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Samus.png\" />Samus\r\n            </mat-option>\r\n            <mat-option value=\"Dr. Mario\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Doctor Mario.png\" />Doctor Mario\r\n            </mat-option>\r\n            <mat-option value=\"Yoshi\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Yoshi.png\" />Yoshi\r\n            </mat-option>\r\n            <mat-option value=\"Luigi\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Luigi.png\" />Luigi\r\n            </mat-option>\r\n            <mat-option value=\"Ganondorf\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Ganondorf.png\" />Ganondorf\r\n            </mat-option>\r\n            <mat-option value=\"Mario\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Mario.png\" />Mario\r\n            </mat-option>\r\n            <mat-option value=\"Young Link\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Young Link.png\" />Young Link\r\n            </mat-option>\r\n            <mat-option value=\"Donkey Kong\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Donkey Kong.png\" />Donkey Kong\r\n            </mat-option>\r\n            <mat-option value=\"Link\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Link.png\" />Link\r\n            </mat-option>\r\n            <mat-option value=\"Game & Watch\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Game & Watch.png\" />Game & Watch\r\n            </mat-option>\r\n            <mat-option value=\"Roy\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Roy.png\" />Roy\r\n            </mat-option>\r\n            <mat-option value=\"Mewtwo\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Mewtwo.png\" />Mewtwo\r\n            </mat-option>\r\n            <mat-option value=\"Ness\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Ness.png\" />Ness\r\n            </mat-option>\r\n            <mat-option value=\"Pichu\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Pichu.png\" />Pichu\r\n            </mat-option>\r\n            <mat-option value=\"Zelda\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Zelda.png\" />Zelda\r\n            </mat-option>\r\n            <mat-option value=\"Kirby\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Kirby.png\" />Kirby\r\n            </mat-option>\r\n            <mat-option value=\"Bowser\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Bowser.png\" />Bowser\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"dropdown\">\r\n          <mat-label>Opponent</mat-label>\r\n          <mat-select [(value)]=\"opponent\">\r\n            <mat-option value=\"Fox\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Fox.png\" />Fox\r\n            </mat-option>\r\n            <mat-option value=\"Falco\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Falco.png\" />Falco\r\n            </mat-option>\r\n            <mat-option value=\"Marth\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Marth.png\" />Marth\r\n            </mat-option>\r\n            <mat-option value=\"Jigglypuff\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Jigglypuff.png\" />Jigglypuff\r\n            </mat-option>\r\n            <mat-option value=\"Sheik\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Sheik.png\" />Sheik\r\n            </mat-option>\r\n            <mat-option value=\"Captain Falcon\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Captain Falcon.png\" />Captain Falcon\r\n            </mat-option>\r\n            <mat-option value=\"Peach\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Peach.png\" />Peach\r\n            </mat-option>\r\n            <mat-option value=\"Ice Climbers\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Ice Climbers.png\" />Ice Climbers\r\n            </mat-option>\r\n            <mat-option value=\"Pikachu\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Pikachu.png\" />Pikachu\r\n            </mat-option>\r\n            <mat-option value=\"Samus\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Samus.png\" />Samus\r\n            </mat-option>\r\n            <mat-option value=\"Dr. Mario\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Doctor Mario.png\" />Doctor Mario\r\n            </mat-option>\r\n            <mat-option value=\"Yoshi\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Yoshi.png\" />Yoshi\r\n            </mat-option>\r\n            <mat-option value=\"Luigi\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Luigi.png\" />Luigi\r\n            </mat-option>\r\n            <mat-option value=\"Ganondorf\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Ganondorf.png\" />Ganondorf\r\n            </mat-option>\r\n            <mat-option value=\"Mario\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Mario.png\" />Mario\r\n            </mat-option>\r\n            <mat-option value=\"Young Link\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Young Link.png\" />Young Link\r\n            </mat-option>\r\n            <mat-option value=\"Donkey Kong\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Donkey Kong.png\" />Donkey Kong\r\n            </mat-option>\r\n            <mat-option value=\"Link\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Link.png\" />Link\r\n            </mat-option>\r\n            <mat-option value=\"Game & Watch\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Game & Watch.png\" />Game & Watch\r\n            </mat-option>\r\n            <mat-option value=\"Roy\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Roy.png\" />Roy\r\n            </mat-option>\r\n            <mat-option value=\"Mewtwo\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Mewtwo.png\" />Mewtwo\r\n            </mat-option>\r\n            <mat-option value=\"Ness\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Ness.png\" />Ness\r\n            </mat-option>\r\n            <mat-option value=\"Pichu\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Pichu.png\" />Pichu\r\n            </mat-option>\r\n            <mat-option value=\"Zelda\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Zelda.png\" />Zelda\r\n            </mat-option>\r\n            <mat-option value=\"Kirby\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Kirby.png\" />Kirby\r\n            </mat-option>\r\n            <mat-option value=\"Bowser\">\r\n              <img class=\"stock-icon\" src=\"../../assets/Bowser.png\" />Bowser\r\n          </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"dropdown\">\r\n          <mat-label>Stage</mat-label>\r\n          <mat-select [(value)]=\"stage\">\r\n            <mat-option value=\"Battlefield\">Battlefield</mat-option>\r\n            <mat-option value=\"Dreamland\">Dreamland</mat-option>\r\n            <mat-option value=\"Final Destination\">Final Destination</mat-option>\r\n            <mat-option value=\"Fountain of Dreams\">Fountain of Dreams</mat-option>\r\n            <mat-option value=\"Pokemon Stadium\">Pokemon Stadium</mat-option>\r\n            <mat-option value=\"Battlefield\">Yoshi's Island</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"dropdown\">\r\n          <mat-label>Training Type</mat-label>\r\n          <mat-select [formControl]=\"training_type\">\r\n            <mat-option *ngFor=\"let type of training_type_list\" [value]=\"type\">{{ type }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"last-dropdown\">\r\n          <mat-label>Training Mode Version</mat-label>\r\n          <mat-select [formControl]=\"version\">\r\n            <mat-option *ngFor=\"let version of version_list\" [value]=\"version\">{{ version }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <br><br>\r\n        <mat-form-field class=\"dropdown\" style=\"width: 50%;\">\r\n          <mat-label>Description</mat-label>\r\n          <textarea matInput placeholder=\"Write a description! How to use the savestate, a description of the different slots, etc.\" [(ngModel)]=\"description\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"accent\" (click)=\"upload()\">UPLOAD</button>\r\n    </mat-card-actions>\r\n    <div class=\"upload-succeeded\" *ngIf=\"upload_successful\">\r\n      <br />\r\n      <center><h4>Upload successful!</h4></center>\r\n    </div>\r\n    <div class=\"upload-failed\" *ngIf=\"upload_unsuccessful\">\r\n      <br />\r\n      <center><h4>Whoops, something went wrong! Please try again.</h4></center>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router'; // CLI imports router\r\n\r\nimport { AboutComponent } from './pages/about/about.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { RegisterComponent } from './pages/register/register.component';\r\nimport { SavestateDetailsComponent } from './pages/savestate-details/savestate-details.component';\r\nimport { SearchComponent } from './pages/search/search.component';\r\nimport { UploadSavestateComponent } from './pages/upload-savestate/upload-savestate.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'profile/:id', component: ProfileComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'savestate-details/:id', component: SavestateDetailsComponent },\r\n  { path: 'search', component: SearchComponent },\r\n  { path: 'upload', component: UploadSavestateComponent }\r\n]; // sets up routes constant where you define your routes\r\n\r\n// configures NgModule imports and exports\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}